[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# G.UIDEF.card_h_popup()
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local card_type = localize('k_'..string.lower(AUT.card_type))"
position = "after"
payload = """
tts.silence()
if AUT.name and AUT.name[1].config.object then
    tts.say(AUT.name[1].config.object.string)
else
    local name_text = ''
    for _, v in ipairs(AUT.name) do
        if v.config and type(v.config.text) == 'string' then name_text = name_text..v.config.text end
    end
    tts.say(name_text)
end
local desc_text = ''
for _, v in ipairs(AUT.main) do
    for _, vv in ipairs(v) do
        if vv.config and type(vv.config.text) == 'string' then
            desc_text = desc_text..vv.config.text
        elseif vv.nodes and vv.nodes[1] and vv.nodes[1].config and type(vv.nodes[1].config.text) == 'string' then
            desc_text = desc_text..vv.nodes[1].config.text
        end
    end
    desc_text = desc_text..' '
end
tts.say(desc_text)
"""
match_indent = true

# Handle button hovering
[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = "self.hovering.target:hover()"
position = "before"
payload = """
local but_text = ''
local function find_strings(target)
    for _, v in ipairs(target.children or {}) do
        if v.config and type(v.config.text) == 'string' then
            but_text = but_text..v.config.text..' '
        elseif v.config and v.config.object and v.config.object.string then
            but_text = but_text..v.config.object.string..' '
        else
            find_strings(v)
        end
    end
end
find_strings(self.hovering.target)
local is_blind_select_button = false
for _, v in ipairs{ "Select", "Skipped", "Current", "Defeated", "Upcoming", "Selected" } do
    if but_text == localize(v, 'blind_states')..' ' then is_blind_select_button = true; break end
end
if is_blind_select_button then
    but_text = ''
    find_strings(self.hovering.target.parent.parent)
end
if but_text ~= '' then 
    tts.silence()
    tts.say(but_text)
end
"""
match_indent = true
