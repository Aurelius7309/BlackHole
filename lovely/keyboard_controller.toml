[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.regex]
target = "main.lua"
pattern = '''if not _RELEASE_MODE and G.keybind_mapping\[key\] then love.gamepadpressed'''
position = "at"
payload = """if BlackHole.awaiting_keypress then
    tts.silence()
    if BlackHole.reserved_keys[key] then
        tts.say(localize{
            type = 'variable',
            key = 'tts_invalid_key',
            vars = {key},
        })
    else
        tts.say(localize{
            type = 'variable',
            key = 'tts_config_keybind',
            vars = {localize(BlackHole.selected_keybind, 'tts_keybinds'), key},
        })
        BlackHole.awaiting_keypress = nil
        BlackHole.cancel_release = true
        BlackHole.config.keybinds[BlackHole.selected_keybind] = key
        BlackHole:save_config()
    end
    return
end
if BlackHole.config.keyboard_controller and G.keybind_mapping[key] then love.gamepadpressed"""

[[patches]]
[patches.regex]
target = "main.lua"
pattern = '''if not _RELEASE_MODE and G.keybind_mapping\[key\] then love.gamepadreleased'''
position = "at"
payload = """if BlackHole.awaiting_keypress or BlackHole.cancel_release then
    BlackHole.cancel_release = nil
    return
end
if BlackHole.config.keyboard_controller and G.keybind_mapping[key] then love.gamepadreleased"""

[[patches]]
[patches.regex]
target = "main.lua"
pattern = '''function love\.gamepadpressed\(joystick, button\)
(?<indent>[\t ]*)button = G\.button_mapping\[button\] or button
'''
position = "after"
payload = """
if (G.STAGE == G.STAGES.MAIN_MENU or G.SETTINGS.paused) and button == 'y' and not BlackHole.capture_controller then
    BlackHole.capture_controller = 1
end
if BlackHole.capture_controller then
    BlackHole.run_setup_controller(button)
    return
end
"""
line_prepend = '$indent'

[[patches]]
[patches.regex]
target = "main.lua"
pattern = '''function love\.gamepadreleased\(joystick, button\)
(?<indent>[\t ]*)button = G\.button_mapping\[button\] or button
'''
position = "after"
payload = """
if BlackHole.capture_controller then return end
"""
match_indent = true

# might just change the offending line in steamodded
[[patches]]
[patches.regex]
target = "functions/button_callbacks.lua"
pattern = '''G.PROFILES\[G\.SETTINGS\.profile\]\.MEMORY\.deck = args\.to_val
'''
position = 'after'
payload = "if not G.sticker_card or not G.sticker_card.area or not G.sticker_card.area.cards then return end"

# Allow focus on certain disabled buttons
[[patches]]
[patches.regex]
target = "functions/UI_definitions.lua"
pattern = '''\{id = '(?<but>select_blind|play|discard)_button','''
position = 'at'
payload = "{id = '${but}_button', force_focus = true,"